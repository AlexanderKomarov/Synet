cmake_minimum_required(VERSION 2.8)

option(SIMD "Use Simd Library" ON)
option(SIMD_AVX512 "Use AVX-512" OFF)
option(BLIS "Use Blis" OFF)

if(MODE STREQUAL "")
    message(FATAL_ERROR "Unknown value of MODE!")
endif()

set(ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../..)

if(CMAKE_BUILD_TYPE STREQUAL "")
    set(CMAKE_BUILD_TYPE "Release")
endif()

if(NOT TOOLCHAIN STREQUAL "")
    set(CMAKE_C_COMPILER ${TOOLCHAIN})
    set(CMAKE_CXX_COMPILER ${TOOLCHAIN})
    execute_process(COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE CMAKE_CXX_COMPILER_VERSION)
	string(REGEX REPLACE "\n$" "" CMAKE_CXX_COMPILER_VERSION "${CMAKE_CXX_COMPILER_VERSION}")
endif()
message("Build type: ${CMAKE_BUILD_TYPE}")
message("Toolchain: ${CMAKE_CXX_COMPILER}")
message("ID: ${CMAKE_CXX_COMPILER_ID}")
message("Version: ${CMAKE_CXX_COMPILER_VERSION}")

include_directories(${ROOT_DIR}/src)

if(CMAKE_BUILD_TYPE STREQUAL "Release")
    set(COMMON_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -O3")
elseif(CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(COMMON_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -O0")
else()
    message(FATAL_ERROR "Unknown value of CMAKE_BUILD_TYPE!")
endif()

if(SIMD)
	option(SIMD_TEST "" OFF)
	option(PRINT_INFO "" OFF)
	set(SIMD_LIB "Simd")	
	set(CHECK_VERSION "0")
	add_definitions(-DSYNET_SIMD_LIBRARY_ENABLE)
	add_definitions(-DSIMD_VERSION="unknown")
	add_subdirectory(${ROOT_DIR}/3rd/Simd/prj/cmake 3rd/Simd)
	include_directories(${ROOT_DIR}/3rd/Simd/src)
else()
	set(SIMD_LIB "")
endif()

if(BLIS)
	set(BLIS_LIB ${CMAKE_BINARY_DIR}/blis/lib/libblis.a)
	set(BLIS_DEP make_blis)
	add_definitions(-DSYNET_BLIS_ENABLE)
	add_subdirectory(${ROOT_DIR}/3rd/blis 3rd/blis)
	include_directories(${CMAKE_BINARY_DIR}/blis/include)
else()
	set(BLIS_LIB "")
	set(BLIS_DEP "")
endif()

if(MODE STREQUAL "darknet")
	set(DARKNET_DIR ${ROOT_DIR}/3rd/darknet)
	include_directories(${DARKNET_DIR}/src)
	add_subdirectory(${DARKNET_DIR} 3rd/darknet)
	file(GLOB_RECURSE TEST_SRC ${ROOT_DIR}/src/Test/TestDarknet.cpp)
	set_source_files_properties(${TEST_SRC} PROPERTIES COMPILE_FLAGS "${COMMON_CXX_FLAGS}")
	add_executable(test_darknet ${TEST_SRC})
	target_link_libraries(test_darknet darknet ${SIMD_LIB} ${BLIS_LIB} -ldl -lpthread)
if(BLIS)
	add_dependencies(test_darknet ${BLIS_DEP})
endif()
elseif(MODE STREQUAL "inference_engine")
	include(${ROOT_DIR}/prj/cmake/inference-engine.cmake)
	file(GLOB_RECURSE TEST_SRC ${ROOT_DIR}/src/Test/TestInferenceEngine.cpp)
	set_source_files_properties(${TEST_SRC} PROPERTIES COMPILE_FLAGS "${COMMON_CXX_FLAGS}")
	add_executable(test_inference_engine ${TEST_SRC})
	add_dependencies(test_inference_engine make_inference_engine)
	target_link_libraries(test_inference_engine ${IE_BIN_LIBS} ${SIMD_LIB} ${BLIS_LIB} -ldl -lpthread)
if(BLIS)
	add_dependencies(test_inference_engine ${BLIS_DEP})
endif()
endif()
